generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  idAccount String   @id @default(uuid())
  password    String
  icNumber    String   @unique
  role        String
  Worker    Worker?
  Manager   Manager?
  Sale      Sale[]
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}
 
model Worker {
  idWorker    String   @id @default(uuid())
  name        String
  address     String
  phoneNumber String
  gender      String
  email       String
  User        User     @relation(fields: [idAccount], references: [idAccount])
  idAccount   String   @unique
  createAt    DateTime @default(now())
  updateAt    DateTime @updatedAt
}

model Manager {
  idManager   String   @id @default(uuid())
  name        String
  address     String
  phoneNumber String
  gender      String
  email       String
  User        User     @relation(fields: [idAccount], references: [idAccount])
  idAccount   String   @unique
  createAt    DateTime @default(now())
  updateAt    DateTime @updatedAt
}

model ListItem {
  idListItem String @id @default(uuid())
  quantity Int
  totalPrice Float 
  Item      Item     @relation(fields: [idItem], references: [idItem])
  idItem    String   
  Sale Sale @relation(fields: [idSale], references: [idSale])
  idSale String            
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Item {
  idItem          String           @id @default(uuid())
  name            String
  category        String
  price           Float
  barcode         String           @unique
  weight          String?
  unit            String?
  quantity        Int
  image           String 
  createdAt       DateTime         @default(now())
  updateAt        DateTime         @updatedAt
  ListItem ListItem[]
}

model Sale {
  idSale        String    @id @default(uuid())
  price         Float
  paymentMethod String
  User        User     @relation(fields: [idAccount], references: [idAccount])
  idAccount   String   
  Report        Report    @relation(fields: [idReport], references: [idReport])
  idReport      String    
  createdAt     DateTime  @default(now())
  updateAt      DateTime  @updatedAt
  ListItem ListItem[]
}

model Report {  
  idReport    String   @id @default(uuid())
  Sale        Sale[]
  numberSale  Int
  saleRevenue Float
  filePath    String
  fileName    String
  createdAt   String
  updateAt    DateTime @updatedAt
}
